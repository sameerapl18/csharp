#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="database")]
public partial class DataClasses2DataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertSport(Sport instance);
  partial void UpdateSport(Sport instance);
  partial void DeleteSport(Sport instance);
  #endregion
	
	public DataClasses2DataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["databaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses2DataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses2DataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClasses2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Sport> Sports
	{
		get
		{
			return this.GetTable<Sport>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sports")]
public partial class Sport : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Team;
	
	private string _Name;
	
	private long _YTDSales;
	
	private long _Goal;
	
	private string _Password;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTeamChanging(string value);
    partial void OnTeamChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnYTDSalesChanging(long value);
    partial void OnYTDSalesChanged();
    partial void OnGoalChanging(long value);
    partial void OnGoalChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
	
	public Sport()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Team
	{
		get
		{
			return this._Team;
		}
		set
		{
			if ((this._Team != value))
			{
				this.OnTeamChanging(value);
				this.SendPropertyChanging();
				this._Team = value;
				this.SendPropertyChanged("Team");
				this.OnTeamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YTDSales", DbType="BigInt NOT NULL")]
	public long YTDSales
	{
		get
		{
			return this._YTDSales;
		}
		set
		{
			if ((this._YTDSales != value))
			{
				this.OnYTDSalesChanging(value);
				this.SendPropertyChanging();
				this._YTDSales = value;
				this.SendPropertyChanged("YTDSales");
				this.OnYTDSalesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goal", DbType="BigInt NOT NULL")]
	public long Goal
	{
		get
		{
			return this._Goal;
		}
		set
		{
			if ((this._Goal != value))
			{
				this.OnGoalChanging(value);
				this.SendPropertyChanging();
				this._Goal = value;
				this.SendPropertyChanged("Goal");
				this.OnGoalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NChar(10)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
